name: Build, Run Tests, and Publish on Merge

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      PUBLISH: ${{ env.PUBLISH }}
    steps:
      - uses: actions/checkout@v3
      - name: Check for Windows line endings
        run: |
          if find ! -path "./.git/*" -type f | xargs file | grep CRLF ; then
            echo "CRLF line ending detected, please fix it"
            exit 1
          fi

      - uses: pnpm/action-setup@v2
        with:
          version: 7

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "pnpm"

      - run: pnpm install --frozen-lockfile

      - run: pnpm build

      - run: pnpm test

      - name: Cache package
        if: env.PUBLISH == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: |
            dist
            index.d.ts
            package.json
            README.md

  publish:
    name: Publish package
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      pages: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Restore dist
        uses: actions/download-artifact@v3
        with:
          name: dist

      - name: Setup Node (using cache)
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          registry-url: "https://registry.npmjs.org"

      - name: Enable corepack
        run: corepack enable

      - name: Publish package
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  demo:
    name: Deploy Demo page
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [ publish, build ]
    permissions:
      contents: read
      packages: write
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        with:
          version: 7

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "pnpm"

      - name: Build demo page, and install its dependencies
        if: env.PUBLISH == 'true'
        run: cd examples/demo && pnpm install --frozen-lockfile && pnpm build

      - name: Artifact for Github Pages
        if: env.PUBLISH == 'true'
        uses: actions/upload-pages-artifact@v1
        with:
          path: examples/demo/dist

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
